<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loha.flippedclassroom.mapper.StrategyMapper">
    <resultMap id="teamStrategyMap" type="TeamStrategyInfo">
        <result column="course_id" property="courseId"/>
        <result column="strategy_serial" property="strategySerial"/>
        <result column="strategy_id" property="strategyId"/>
        <result column="strategy_name" property="strategyTableName"/>
    </resultMap>

    <resultMap id="teamAndStrategyMap" type="StrategyInfo">
        <id column="id" property="id"/>
        <result column="strategy_name" property="strategyName"/>
        <result column="strategy_id" property="strategyId"/>
    </resultMap>

    <resultMap id="teamOrStrategyMap" type="StrategyInfo">
        <id column="id" property="id"/>
        <result column="strategy_name" property="strategyName"/>
        <result column="strategy_id" property="strategyId"/>
    </resultMap>

    <resultMap id="memberLimitStrategyMap" type="MemberLimitStrategy">
        <id column="id" property="id"/>
        <result column="min_member" property="minMember"/>
        <result column="max_member" property="maxMember"/>
    </resultMap>

    <resultMap id="courseMemberLimitStrategyMap" type="CourseMemberLimitStrategy">
        <id column="id" property="id"/>
        <result column="course_id" property="courseId"/>
        <result column="min_member" property="minMember"/>
        <result column="max_member" property="maxMember"/>
    </resultMap>

    <resultMap id="conflictCourseStrategyMap" type="ConflictCourseStrategy">
        <id column="id" property="id"/>
        <collection property="courseIds" ofType="Long" column="id" select="selectCourseIdsInConflict">
        </collection>
    </resultMap>

    <select id="selectTeamAndStrategyById" parameterType="Long" resultMap="teamAndStrategyMap">
        select * from team_and_strategy where id=#{value}
    </select>

    <select id="selectTeamOrStrategyById" parameterType="Long" resultMap="teamOrStrategyMap">
        select * from team_or_strategy where id=#{value}
    </select>

    <select id="selectMemberLimitStrategyById" parameterType="Long" resultMap="memberLimitStrategyMap">
        select * from member_limit_strategy where id=#{value}
    </select>

    <select id="selectCourseMemberLimitStrategyById" parameterType="Long" resultMap="courseMemberLimitStrategyMap">
        select * from course_member_limit_strategy where id=#{value}
    </select>

    <!--重新写-->
    <select id="selectConflictCourseId" parameterType="Long" resultType="Long">
        select course_id from conflict_course_strategy where id=#{value}
    </select>

    <select id="selectTeamAndStrategy" parameterType="Long" resultMap="teamAndStrategyMap">
        select * from team_and_strategy where id=#{value}
    </select>

    <select id="selectTeamOrStrategy" parameterType="Long" resultMap="teamOrStrategyMap">
        select * from team_or_strategy where id=#{value}
    </select>

    <select id="selectTeamStrategyByCourseId" parameterType="Long" resultMap="teamStrategyMap">
        select * from team_strategy where course_id=#{value}
    </select>

    <!--插入策略表-->
    <insert id="insertMemberLimitStrategy" parameterType="MemberLimitStrategy">
        <selectKey keyProperty="id" order="AFTER" resultType="Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into member_limit_strategy(min_member, max_member)
        values (#{minMember}, #{maxMember})
    </insert>

    <insert id="insertCourseMemberLimitStrategy" parameterType="CourseMemberLimitStrategy">
        <selectKey keyProperty="id" order="AFTER" resultType="Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into course_member_limit_strategy (course_id, min_member, max_member)
        VALUES (#{courseId}, #{minMember}, #{maxMember})
    </insert>

    <insert id="insertConflictCourseStrategy" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="BEFORE" keyColumn="id">
            select uuid_short()
        </selectKey>
        insert into conflict_course_strategy (id, course_id) values
        <foreach separator="," index="index" item="item" collection="list">
            (#{id},#{item.courseId})
        </foreach>
    </insert>


    <insert id="insertTeamAndStrategy" keyProperty="id" useGeneratedKeys="true" parameterType="java.util.List">
      <selectKey resultType="long" keyProperty="id" order="BEFORE">
        select uuid_short()
      </selectKey>
      insert into team_and_strategy (id, strategy_name, strategy_id) values
      <foreach separator="," index="index" item="item" collection="list">
        (#{id},#{item.strategyName},#{item.strategyId})
      </foreach>
    </insert>


    <insert id="insertTeamOrStrategy" keyProperty="id" useGeneratedKeys="true" parameterType="java.util.List">
      <selectKey resultType="Long" keyProperty="id" order="BEFORE">
          select uuid_short()
      </selectKey>
      insert into team_or_strategy (id, strategy_name, strategy_id) values
      <foreach separator="," index="index" item="item" collection="list">
          (#{id},#{item.strategyName},#{item.strategyId})
      </foreach>
    </insert>

    <insert id="insertTeamStrategy" parameterType="TeamStrategyInfo">
      insert into team_strategy (course_id, strategy_serial, strategy_name, strategy_id)
      values (#{courseId},#{strategySerial},#{strategyTableName},#{strategyId})
    </insert>

    <select id="selectConflictCourseStrategyLastInsert" resultType="Long">
        select id from conflict_course_strategy order by id desc limit 1
    </select>

    <select id="selectTeamOrStrategyLastInsert" resultType="Long">
        select id from team_or_strategy order by id desc limit 1
    </select>

    <select id="selectTeamAndStrategyLastInsert" resultType="Long">
      select id from team_and_strategy order by id desc limit 1
    </select>

</mapper>