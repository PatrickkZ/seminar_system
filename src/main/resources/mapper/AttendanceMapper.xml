<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loha.flippedclassroom.mapper.AttendanceMapper">
    <resultMap id="attendanceMap" type="Attendance">
        <id column="id" property="id"/>
        <result column="klass_seminar_id" property="klassSeminarId"/>
        <result column="team_id" property="teamId"/>
        <result column="team_order" property="teamOrder"/>
        <result column="is_present" property="isPresent"/>
        <result column="report_name" property="reportName"/>
        <result column="report_url" property="reportUrl"/>
        <result column="ppt_name" property="pptName"/>
        <result column="ppt_url" property="pptUrl"/>

        <association property="team" select="com.loha.flippedclassroom.mapper.TeamMapper.selectTeamById" column="team_id"></association>
    </resultMap>

    <select id="selectAttendanceById" parameterType="Long" resultMap="attendanceMap">
        select * from attendance where id=#{value}
    </select>
    
    <select id="selectTeamByKlassSeminarId" parameterType="Attendance" resultMap="attendanceMap">
        select * from attendance where klass_seminar_id=#{klassSeminarId} and team_id=#{teamId}
    </select>

    <select id="selectTeamListByKlassSeminarId" parameterType="Long" resultMap="attendanceMap">
        select * from attendance where klass_seminar_id=#{klassSeminarId}
    </select>

    <select id="selectTeamByKlassSeminarIdAndTeamOrder" parameterType="Attendance" resultMap="attendanceMap">
        select * from attendance where klass_seminar_id=#{klassSeminarId} and team_order=#{teamOrder}
    </select>

    <insert id="insertAttendance" parameterType="Attendance">
        insert into attendance (klass_seminar_id,team_id,team_order,is_present)
        values(#{klassSeminarId},#{teamId},#{teamOrder},0)
    </insert>

    <update id="updateTeamOrder" parameterType="Attendance">
        update attendance
        set team_order=#{teamOrder}
        where klass_seminar_id=#{klassSeminarId} and team_id=#{teamId}
    </update>

    <update id="updatePowerPointByAttendanceId" parameterType="Attendance">
        update attendance
        set ppt_name=#{pptName},ppt_url=#{pptUrl}
        where id=#{id}
    </update>

    <update id="updateReportByAttendanceId" parameterType="Attendance">
        update attendance
        set report_name=#{reportName},report_url=#{reportUrl}
        where id=#{id}
    </update>

    <delete id="deleteRegisterRecord" parameterType="Attendance">
        delete from attendance
        where klass_seminar_id=#{klassSeminarId} and team_id=#{teamId}
    </delete>

    <update id="updateIsPresent" parameterType="Attendance">
        update attendance
        set is_present=#{isPresent}
        where id=#{id}
    </update>

    <select id="selectKlassSeminarIdAttended" resultType="Long">
        select klass_seminar_id from attendance
        where team_id=#{teamId}
        and klass_seminar_id in
        <foreach collection="klassSeminarIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

</mapper>